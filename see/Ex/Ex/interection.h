#pragma once
#include<graphics.h>
#include<conio.h>
#include<Windows.h>
#define first x
#define second y
#include<cmath>
#include<algorithm>
#include<stack>
#include<iostream>
#include<vector>

#include"Draw.h"
#include"edgetable.h"
using namespace std;
#define x first
#define y second

class interection
{
    private:
		vector<PII> points;
		edgetable E;
		Draw D;
		bool isok = 0;
		int cx1 = 402, cy1 = 403, r1 = 377.5;
		COLORREF color[4] = { RGB(188, 223, 121),RGB(122,106,91),RGB(169,133,104),RGB(179, 221, 47) };
		
		vector<PII> dot[4]
			= { {
		  {306,161},{307,161},{307,160},{312,158},{323,157},{338,157},{357,157},
		  {362,158},{369,161},{374,162},{374,163},{376,163},{378,164},{399,178},
		  {403,182},{408,188},{414,198},{425,215},{430,226},{434,243},{436,254},
		  {437,270},{434,281},{440,275},{456,265},{466,259},{486,252},{499,250},
		  {512,250},{526,251},{538,253},{561,259},{573,263},{591,270},{601,274},
		  {609,279},{615,284},{619,289},{621,295},{619,301},{610,308},{590,309},
		  {573,308},{561,308},{543,308},{543,308},{494,303},{476,304},{457,311},
		  {447,317},{459,315},{477,315},{487,315},{506,318},{508,319},{519,324},
		  {530,331},{542,342},{546,347},{552,354},{556,362},{558,363},{560,369},
		  {563,379},{566,391},{566,395},{566,406},{562,415},{553,419},{550,419},
		  {547,419},{542,416},{541,415},{534,410},{528,403},{516,391},{500,378},
		  {488,367},{478,360},{464,351},{450,343},{443,340},{432,346},{427,335},
		  {422,329},{411,323},{404,321},{394,324},{385,329},{379,336},{374,345},
		  {370,340},{363,338},{341,353},{331,359},{326,362},{317,368},{301,381},
		  {284,397},{274,408},{265,415},{254,420},{250,419},{244,414},{240,407},
		  {241,395},{242,385},{246,373},{244,376},{250,365},{258,351},{265,342},
		  {282,327},{294,322},{302,319},{314,316},{333,314},{339,314},{350,315},
		  {360,316},{350,311},{335,306},{326,305},{314,304},{291,305},{285,306},
		  {264,308},{244,309},{226,310},{209,310},{197,307},{187,302},{186,295},
		  {194,283},{195,280},{206,275},{214,270},{238,262},{248,259},{261,255},
		  {282,251},{296,249},{310,250},{322,252},{334,255},{341,259},{352,264},
		  {364,274},{372,281},{385,291},{386,279},{384,270},{371,247},{368,239},
		  {353,218},{344,205},{338,198},{329,187},{315,174}
		   },
          {
		  {432,346},{429,358},{430,357},{426,365},{418,375},{413,376},{409,377},
		  {404,379},{401,379},{398,378}, {396,377},{390,376},
		  {385,371},//树干
		  {382,370},{380,364},{379,362},{375,355} ,{374,345},{382,436},{381,464},
		  {381,488},{379,505},{378,526},{376,549},{376,593},{375,607},{375,612},
		  {372,630},{370,639},{367,644},{366,646},{362,648},{359,650},{353,654},{338,656},
		  {322,658},//小树干右
		  {308,662}, {298,665},{287,669},
		  {270,678},//小树干左
		  {263,683},{244,698},{238,706},{237,708},{233,712},{231,719},{230,727},
		  {229,721},{228,735},
		  {227,738},//大树干底部左
		  {234,740},{247,748},{250,749},{251,751},{255,752},{260,755},{272,759},
		  {289,765},{302,768},
		  {315,771},{335,775},{342,776},{353,778},{370,780},{374,781},{375,780},
		  {399,781},{404,781},{432,779},{470,776},{471,776},{479,773},{482,773},
		  {486,772},{494,770},{496,769},{498,769},{509,766},{514,765},
		  {523,762},{524,761},{531,759},{535,757},{542,754},{559,746},
		  {578,737},//大树干底部右
		  {579,733},{577,722},{571,709},{568,706},{557,692},{548,684},{542,680},
		  {534,676},{517,668},{489,659},{486,658},{458,653},{454,652},{447,650},
		  {440,641},{438,638},{435,633},{432,609},{430,561},{430,541},{429,525},
		  {426,472},{426,455},{425,408}
		   },
			{
		  {322,658},{318,649},{301,608},{277,549},
		  {270,532},//小树干上右
		  {264,530},{259,530},{258,530},{254,530},{250,530},{243,533},
		  {239,535},//小树干上左
		  {247,548},{258,569},{266,597},{270,617},{273,653},{270,678},{308,662},
		  {298,665},{287,669}
		   },
			{
		  {270,532},{264,530},{259,530},{258,530},{254,530},{250,530},{243,533},
		  {239,535},{229,542},{220,558},{213,574},{209,588},{205,599},{201,611},
		  {196,614},{192,613},{189,612},{181,601},{178,586},{177,574},{180,553},
		  {182,538},{186,530},{171,539},{162,545},{150,553},{144,554},{135,552},
		  {133,546},{134,530},{140,517},{144,509},{147,506},{155,498},{160,496},
		  {170,491},{185,489},{201,489},{189,478},{176,470},{161,465},{165,454},
		  {172,450},{176,449},{186,446},{198,446},{211,449},{223,453},{235,462},
		  {240,468},{250,460},{257,457},{271,454},{287,455},{306,462},{310,466},
		  {314,474},{310,478},{312,477},{298,485},{290,489},{274,501},{286,508},
		  {290,512},{294,514},
		  {300,520},{305,523},{314,534},{316,537},{318,540},{322,545},{325,551},
		  {325,559},{320,561},{308,554},{290,542}
		   } };
		   
		int cx2 = 403, cy2 = 351, r2 = 29;
    public:
		void mouse_draw_line();
		
		void draw_option(RECT &rect, const char* text, int x, int y);
		
		void draw_menu();
		void symbol_menu();
		void is_inside_polygon(bool &isDragging, MOUSEMSG m, PII startpos);
		void is_in_line(bool &isDragging, MOUSEMSG m, PII startpos);
		

		void I_translation();
		void I_rotation();
		void I_scaling(int x1, int y1, int x2, int y2);//传入更新窗口范围
		
		void translation_symbol();
		void rotation_symbol();
		void scaling_symbol();
};

